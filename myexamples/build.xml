<?xml version="1.0" encoding="UTF-8"?>
<project name="dotty-common" default="init" xmlns:ivy="antlib:org.apache.ivy.ant">

    <!-- set scala3.home -->
    <property environment="env" />

    <condition property="user.home"
        value="${env.USERPROFILE}"
        else="${env.HOME}">
        <os family="windows" />
    </condition>
    <property name="ivy.cache" value="${user.home}/.ivy2/cache" />

    <property name="hamcrest.version" value="2.2" />
    <property name="junit.version" value="4.13.2" />

    <target name="init.local" if="use.local">
        <property name="scala3.home" value="${env.SCALA3_HOME}" />
        <condition property="dotc.executable"
            value="${scala3.home}/bin/scalac.bat"
            else="${scala3.home}/bin/scalac">
            <os family="windows" />
        </condition>
        <fail message="Scala 3 compiler not found">
            <condition><not>
                <available file="${dotc.executable}" />
            </not></condition>
        </fail>
        <echo message="SCALA3_HOME=${scala3.home}" />
        <path id="scalac.classpath">
            <fileset dir="${scala3.home}/lib" includes="jline-*.jar" />
            <fileset dir="${scala3.home}/lib" includes="scala-*.jar" />
            <fileset dir="${scala3.home}/lib" includes="scala3-*.jar" />
            <fileset dir="${scala3.home}/lib" includes="scaladoc*.jar" />
            <fileset dir="${scala3.home}/lib" includes="tasty-*.jar" />
        </path>
        <path id="scala.classpath">
            <fileset dir="${scala3.home}/lib" includes="scala3-library*.jar" />
            <fileset dir="${scala3.home}/lib" includes="scala-library*.jar" />
        </path>
    </target>

    <target name="init.ivy" unless="use.local">
        <!-- installed: C:/opt/apache-ant-1.10.10/lib/ivy-2.5.0.jar -->
        <taskdef resource="org/apache/ivy/ant/antlib.xml"
            uri="antlib:org.apache.ivy.ant" />
        <ivy:resolve file="../ivy.xml" showprogress="false" log="download-only" />
        <ivy:cachepath pathid="scalac.classpath" conf="default"/>

        <path id="scala.classpath">
            <!--
            <fileset dir="${ivy.cache}/ch.epfl.lamp" includes="**/jars/dotty-library*.jar">
                <filename regex="_0\.(1[8-9]|2[0-9])-0\.(1[8-9]|2[0-9])\.[0-9]+" />  // e.g. _0.25-0.25.x
            </fileset>
            -->
            <fileset dir="${ivy.cache}/org.scala-lang" includes="**/jars/scala3-library*.jar">
                <filename regex="_3-3\.[0-9]\.[0-9](-RC[1-9])?" />  <!-- e.g. _3.0.0-RC1-3.0.0-RC1 -->
            </fileset>
            <fileset dir="${ivy.cache}/org.scala-lang" includes="**/jars/scala-library*.jar">
                <filename regex="-2\.[1-2][3-9]\.[0-9]+" />  <!-- e.g. -2.13.x -->
            </fileset>
        </path>
        <pathconvert property="scala.classpath.prop" refid="scala.classpath"/>
        <echo message="scala.classpath=${scala.classpath.prop}" level="verbose" />
    </target>

    <target name="init" depends="init.local, init.ivy">
        <path id="build.classpath">
            <pathelement location="${build.dir}" />
        </path>
        <path id="basedir.ref">
            <pathelement location="${basedir}"/>
        </path>
        <path id="test.classpath">
            <fileset dir="${ivy.cache}/junit" includes="**/jars/junit-${junit.version}.jar" />
            <fileset dir="${ivy.cache}/org.hamcrest" includes="**/jars/hamcrest-${hamcrest.version}.jar" />
            <path refid="build.classpath" />
            <pathelement location="${test-build.dir}" />
        </path>
    </target>

    <macrodef name="dotc" >
        <attribute name="srcdir" default="." />
        <attribute name="destdir" default="." />
        <attribute name="classpathref" default="basedir.ref" />
        <sequential>
            <!-- local properties -->
            <local name="classpath"/>
            <local name="n"/>
            <local name="quoted"/>
            <local name="s"/>
            <local name="scala.sources"/>

            <pathconvert property="scala.sources" pathsep=" ">
                <fileset dir="@{srcdir}" includes="**/*.scala" />
            </pathconvert>
            <resourcecount property="n">
                <fileset dir="@{srcdir}" includes="**/*.scala" />
            </resourcecount>
            <condition property="s" value="s" else="">
                <not><matches string="${n}" pattern="[0-1]" /></not>
            </condition>
            <!--
            <exec executable="echo" taskname="scalac">
                <arg value="Compiling ${n} source file${s} to @{destdir}" />
            </exec>
            -->
            <echo message="Compiling ${n} source file${s} to @{destdir}" level="info" />
            <pathconvert property="classpath" refid="@{classpathref}" />
            <condition property="quoted" value="&quot;" else="">
                <contains string="${classpath}" substring=" " />
            </condition>
            <java fork="true" classname="dotty.tools.dotc.Main" classpathref="scalac.classpath">
                <jvmarg value="-Xmx768m" />
                <jvmarg value="-Xms768m" />
                <jvmarg value="-Dscala.usejavacp=true" />
                <arg value="-deprecation" />
                <arg value="-d" />
                <arg value="@{destdir}" />
                <arg value="-classpath" />
                <arg value="${quoted}${classpath}${quoted}" />
                <arg line="${scala.sources}" />
            </java>
        </sequential>
    </macrodef>

    <macrodef name="dotd" >
        <attribute name="srcdir" default="." />
        <attribute name="destdir" default="." />
        <attribute name="classpathref" default="basedir.ref" />
        <sequential>
            <!-- local properties -->
            <local name="classpath"/>
            <local name="n"/>
            <local name="quoted"/>
            <local name="s"/>
            <local name="tasty.sources"/>

            <pathconvert property="tasty.sources" pathsep=" ">
                <fileset dir="@{srcdir}" includes="**/*.tasty" />
            </pathconvert>
            <resourcecount property="n">
                <fileset dir="@{srcdir}" includes="**/*.tasty" />
            </resourcecount>
            <condition property="s" value="s" else="">
                <not><matches string="${n}" pattern="[0-1]" /></not>
            </condition>
            <echo message="Compiling ${n} TASTY file${s} to @{destdir}" level="info" />
            <pathconvert property="classpath" refid="@{classpathref}" />
            <condition property="quoted" value="&quot;" else="">
                <contains string="${classpath}" substring=" " />
            </condition>
            <java fork="true" classname="dotty.tools.scaladoc.Main" classpathref="scalac.classpath">
                <jvmarg value="-Xmx768m" />
                <jvmarg value="-Xms768m" />
                <jvmarg value="-Dscala.usejavacp=true" />
                <arg value="-d" />
                <arg value="@{destdir}" />
                <arg value="-classpath" />
                <arg value="${quoted}${classpath}${quoted}" />
                <arg value="-project" />
                <arg value="${ant.project.name}" />
                <arg line="${tasty.sources}" />
            </java>
        </sequential>
    </macrodef>

    <target name="test.install">
        <ivy:resolve file="../ivy-test.xml" showprogress="false" log="download-only" />
        <ivy:install
            organisation="junit" module="junit" revision="${junit.version}"
            transitive="true" overwrite="false" from="public" to="local"
        />
        <ivy:install
            organisation="org.hamcrest" module="hamcrest" revision="${hamcrest.version}"
            transitive="true" overwrite="false" from="public" to="local"
        />
    </target>

</project>
